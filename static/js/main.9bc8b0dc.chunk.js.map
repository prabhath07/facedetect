{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Logo/Logo.js","Components/Imre/Imre.js","Components/Linkbar/Link.js","App.js","serviceWorker.js","index.js","Components/Logo/Logo.png"],"names":["Navbar","style","display","justifyContent","class","Logo","options","max","height","width","src","Logo2","Imre","url","box","id","top","bottom","left","right","Link","Oninput","Ontap","type","onChange","onClick","app","Clarifai","App","apiKey","pro","faceloc","data","image","document","getElementById","Number","left_col","right_col","top_row","bottom_row","facebox","loc","setState","console","log","state","event","input","target","value","models","predict","then","response","outputs","regions","region_info","bounding_box","catch","err","this","className","params","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.9bc8b0dc.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nconst Navbar =()=>{\r\n\r\n\t\r\nreturn(\r\n\t<nav style={{display: 'flex', justifyContent: 'center'}}>\r\n\t<p class='f2   he  black  pa3 pointer'>Face detector</p>\r\n\t</nav>);\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default  Navbar;","import React from 'react';\r\nimport 'tachyons';\r\nimport Tilty from \"react-tilty\";\r\nimport Logo2 from './Logo.png';\r\nimport './lo.css';\r\n\r\nconst Logo =()=>{\r\n\t return(<div class ='ma4 mt0'><Tilty class='Tilt br2 shadow-2' options ={{max:25}} style ={{ height:150 , width : 150}}>\r\n\t \t<div class ='Tilt-inner'><img class='hi' src ={Logo2}/></div>\r\n</Tilty>\r\n</div>\r\n);\r\n}\r\n\r\nexport default  Logo;\r\n","import React from 'react';\r\nimport 'tachyons';\r\nimport '../Linkbar/Link.css';\r\n\r\nconst Imre=({url,box})=>{\r\n return (<div class ='ce ma '>\r\n \t<div class =\"absolute mt2\">\r\n \t<img id='im' src={url} width='500px' height ='auto'/>\r\n         <div class='bounding-box' style={{top:box.top , bottom:box.bottom, left: box.left, right:box.right}}>\r\n         </div>\r\n         </div> \r\n\r\n \t</div>);\r\n}\r\nexport default Imre;","import React from 'react';\r\nimport 'tachyons';\r\nimport './Link.css';\r\n\r\nconst Link=({Oninput,Ontap})=>{\r\n return (<div>\r\n           <p class='f3 he ce'>\r\n           YOU GIVE A LINK I WILL GIVE U A FACE\r\n           </p>\r\n           <div class='ce '>\r\n           <div class ='ba pa4 ce br3 '>\r\n           \r\n           <input type=\"text\" class=\"pa2 f4 w-150 center \" onChange={Oninput}/>\r\n           <button class =\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple poi\" onClick={Ontap} >Detect</button>\r\n           </div></div>\r\n\r\n\r\n\r\n \t</div>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Link;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport Logo from './Components/Logo/Logo';\nimport Imre from './Components/Imre/Imre';\n\nimport Link from './Components/Linkbar/Link';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\n\n\n//const Clarifai = require('clarifai');\n\nconst app = new Clarifai.App({\n apiKey: '746e437b7e994ec4bffffdf1e9d6648f'\n});\n\nconst pro={\"particles\":{\"number\":{\"value\":80,\"density\":{\"enable\":true,\"value_area\":800}}}}\nclass  App extends React.Component {\n\nconstructor(){\n\nsuper()\nthis.state={\n  input:'',\n  url:'',\n  box:{}\n}\n\n}\n\nfaceloc=(data)=>{\n     const image= document.getElementById('im');\n      const width = Number(image.width);\n     const height =Number(image.height);\n      return{\n        left:data.left_col*width,\n        right:width-(data.right_col*width),\n        top:data.top_row*height,\n        bottom:height-(data.bottom_row*height)\n      }\n\n}\n\n\nfacebox=(loc)=>{\n   this.setState({ box:loc});\n    console.log(this.state.box);\n\n\n}\n\n\n\n\n\nOninput=(event)=>{\n  this.setState({ input:event.target.value});\n  //console.log('hello');\n}\nOntap=()=>{\n // console.log('helloooo');\n   this.setState({ url:this.state.input});\n\napp.models.predict(\"a403429f2ddf4b49b307e318f00e528b\",\n this.state.input).then(response => \n     this.facebox(this.faceloc(response.outputs[0].data.regions[0].region_info.bounding_box)))\n.catch(err=>console.log(err))\n\n}\n      // do something with response\n    \n   \n\n  render(){\n  return (<div>\n\n<Navbar/>\n<Logo/>\n<Link Oninput={this.Oninput}\nOntap={this.Ontap}/>\n<Particles  \nclassName ='hoo' params={pro}/>\n<Imre box={this.state.box} url={this.state.url}/>\n    </div>)\n    \n  \n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.0ca6bee8.png\";"],"sourceRoot":""}